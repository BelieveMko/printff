#include "main.h"

/**
 * print_int - prints an integer value
 * @l: va_list arguements
 * @f: pointer to the struct flags 
 * Return: num of chars printed
 */
int print_int(va_list l, flags_t *f)
{
	int n = va_arg(l, int);
	int ff = count_digit(n);

	
	if (f->space == 1 && f->plus == 0 && n >= 0)
	{	ff += _putchar(' ');
	}		
	if (f->plus == 1 && n >= 0)
	{	ff += _putchar('+');
	}
	if (n <= 0)
	{	ff++;
	}
	print_number(n);
	return (ff);
}

/**
 * print_unsigned - prints an unsined integer number
 * @l: va_list of arguements
 * @f: pointer to the struct flags
 * Return: num of chars printed
 */
int print_unsigned(va_list l, flags_t *f)
{
	unsigned int u = va_arg(l, unsigned int);
	char *str = convert(u, 10, 0);

	(void)f;

	return (_puts(str));
}

/**
 * print_number - function that loops 
 * @n: integer to be printed
 */
void print_number(int n)
{
	unsigned int num;

	if (n < 0)
	{
		_putchar('-');
		num1 = -n;
	}
	else
		num1 = n;

	if (num1 / 10)
		print_number(num1 / 10);
	_putchar((num1 % 10) + '0');
}

/**
 * count_digit - this function returns the number of digits in an integer value
 * @i: integer 
 * Return: - number of digits
 */
int count_digit(int i)
{
	unsigned int digit = 0;
	unsigned int u;

	if (i < 0)
		u = i * -1;
	else
		u = i;
	while (u != 0)
	{
		u /= 10;
		digit++;
	}
	return (digit);
}
